{"version":3,"sources":["assets\\scripts\\LimitNodeSize.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAsC;AAEhC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA2C,iCAAY;IAAvD;QAAA,qEAoCC;QAjCG,gBAAU,GAAY,IAAI,CAAC;QAE3B,cAAQ,GAAW,GAAG,CAAC;QAEvB,eAAS,GAAW,GAAG,CAAC;QAExB,aAAO,GAAW,EAAE,CAAC;;IA2BzB,CAAC;IA1Ba,8BAAM,GAAhB;QACI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IACS,6BAAK,GAAf;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IACS,kCAAU,GAApB;QACI,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAC7B,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7B,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7C,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;SAC1C;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;SAC7C;QACD,mBAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;QAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC3B,CAAC;IACS,gCAAQ,GAAlB;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IACS,iCAAS,GAAnB;QACI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAhCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACS;IAE3B;QADC,QAAQ;mDACc;IAEvB;QADC,QAAQ;oDACe;IAExB;QADC,QAAQ;kDACY;IATJ,aAAa;QADjC,OAAO;OACa,aAAa,CAoCjC;IAAD,oBAAC;CApCD,AAoCC,CApC0C,EAAE,CAAC,SAAS,GAoCtD;kBApCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import { EventBus } from \"./EventBus\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LimitNodeSize extends cc.Component {\n\n    @property(cc.Node)\n    targetNode: cc.Node = null;\n    @property\n    maxWidth: number = 300;\n    @property\n    maxHeight: number = 300;\n    @property\n    marginX: number = 50;\n    protected onLoad(): void {\n        cc.view.on('canvas-resize', this.onResize, this);\n    }\n    protected start(): void {\n        this.adjustSize();\n    }\n    protected adjustSize(): void {\n        if (!this.targetNode) return;\n        const node = this.targetNode;\n        const aspectRatio = node.height / node.width;\n        if (cc.winSize.width < node.width) {\n            node.width = cc.winSize.width - this.marginX * 2;\n            node.height = node.width * aspectRatio;\n        } else {\n            node.width = this.maxWidth;\n            node.height = this.maxWidth * aspectRatio;\n        }\n        EventBus.emit('board-change-size')\n        console.log(node.width)\n    }\n    protected onResize(): void {\n        this.adjustSize();\n    }\n    protected onDestroy(): void {\n        cc.view.off('canvas-resize', this.onResize, this);\n    }\n}\n"]}