{"version":3,"sources":["assets\\scripts\\Board.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BoardType, BlockClickEvent } from \"./Types\";\r\nimport { getRandomBlockKey } from \"./Utils\";\r\nimport { EventBus } from \"./EventBus\";\r\nimport { GridConfig } from \"./GridConfig\";\r\nimport BlockFactory from \"./BlockFactory\";\r\nimport BoardSizer from \"./BoardSizer\";\r\nimport { Handler } from \"./HandlerInterface\";\r\nimport { BoardCommand } from \"./Commands\";\r\nimport { BlockClickHandler } from \"./BlockClickHandler\";\r\nimport ExtraBlockClickHandler from \"./ExtraBlockClickHandler\";\r\n\r\nconst { Vec3 } = cc;\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Board extends cc.Component {\r\n    @property(cc.Prefab)\r\n    blockPrefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    extraBlockPrefab: cc.Prefab = null;\r\n    @property\r\n    private width: number = 9;\r\n    @property\r\n    private height: number = 9;\r\n    public board: BoardType[][];\r\n    public blockFactory: BlockFactory;\r\n    private extraBlockHandler: Handler;\r\n    private blockHandler: Handler;\r\n    public blockSizer: BoardSizer;\r\n    protected onLoad(): void {\r\n        EventBus.on('block-clicked', this.onBlockClicked, this);\r\n        EventBus.on('board-change-size', this.onResize, this);\r\n    }\r\n\r\n    protected start(): void {\r\n        this.board = new Array(this.height).fill(0).map(() => new Array(this.width).fill(null));\r\n        this.blockFactory = new BlockFactory(this.blockPrefab, this.extraBlockPrefab, this.node);\r\n\r\n        this.extraBlockHandler = new ExtraBlockClickHandler(this.board);\r\n        this.blockHandler = new BlockClickHandler(this.board);\r\n        this.blockHandler.setNext(this.extraBlockHandler);\r\n\r\n        this.blockSizer = new BoardSizer(this.node, this.width, new cc.Vec2(GridConfig.width, GridConfig.height))\r\n        this.scheduleOnce(() => {\r\n            this.blockSizer.setBlockSize(this.blockSizer.calculateBlockSize());\r\n            this.fill();\r\n        }, 0);\r\n    }\r\n    public fill(): void {\r\n        const blockSize = this.blockSizer.getBlockSize()\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                if (this.board[y][x] === null) {\r\n                    const block = this.blockFactory.createBlock(y, x, getRandomBlockKey(), blockSize);\r\n                    this.setBlock(y, x, block);\r\n                    const startPos = new Vec3(\r\n                        -(this.node.width / 2 - GridConfig.marginX - blockSize.x / 2) + blockSize.x * x,\r\n                        GridConfig.behindScreen\r\n                    )\r\n                    const targetPos = this.blockSizer.getBlockPosition(y, x, blockSize)\r\n                    block.fallAnimation(startPos, targetPos);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public fall(): void {\r\n        const blockSize = this.blockSizer.getBlockSize()\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = this.height - 2; y >= 0; y--) {\r\n                const block = this.board[y][x];\r\n                if (!block) continue;\r\n                let newY = y;\r\n                while (newY + 1 < this.height && this.board[newY + 1][x] === null) {\r\n                    newY++;\r\n                }\r\n                if (newY !== y) {\r\n                    this.board[y][x] = null;\r\n                    this.setBlock(newY, x, block);\r\n                    const targetPos = this.blockSizer.getBlockPosition(newY, x, blockSize)\r\n                    block.fallTo(targetPos, 0.4)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private onBlockClicked(data: BlockClickEvent): void {\r\n        const commands: BoardCommand[] = [];\r\n        this.blockHandler.handle(data, commands);\r\n        commands.forEach((comand) => comand.execute(this))\r\n        this.fall();\r\n        this.fill();\r\n    }\r\n    public deleteBlock(row: number, col: number): void {\r\n        const block = this.board[row][col];\r\n        block.destroyYourself();\r\n        this.board[row][col] = null;\r\n    }\r\n    public setBlock(row: number, col: number, block: BoardType): void {\r\n        block.setRowCol(row, col);\r\n        this.board[row][col] = block;\r\n    }\r\n    private onResize(): void {\r\n        if (!this.board) return;\r\n        this.blockSizer.setBlockSize(this.blockSizer.calculateBlockSize());\r\n        const blockSize = this.blockSizer.getBlockSize()\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                const block = this.board[y][x];\r\n                block?.setSize(blockSize);\r\n                const targetPos = new Vec3(\r\n                    -(this.node.width / 2 - GridConfig.marginX - blockSize.x / 2) + blockSize.x * x,\r\n                    (this.node.height / 2 - GridConfig.marginX - blockSize.y / 2) - blockSize.y * y,\r\n                    0);\r\n                block?.node.setPosition(targetPos);\r\n            }\r\n        }\r\n    }\r\n    protected onDestroy(): void {\r\n        EventBus.off('board-change-size', this.onResize, this);\r\n        EventBus.off('block-clicked', this.onBlockClicked, this);\r\n    }\r\n}\r\n"]}