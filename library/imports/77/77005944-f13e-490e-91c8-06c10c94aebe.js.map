{"version":3,"sources":["assets\\scripts\\BoardSizer.ts"],"names":[],"mappings":";;;;;;AAAA,2CAA0C;AAE1C;IAGI,oBACY,SAAkB,EAClB,OAAe,EACf,iBAA0B;QAF1B,cAAS,GAAT,SAAS,CAAS;QAClB,YAAO,GAAP,OAAO,CAAQ;QACf,sBAAiB,GAAjB,iBAAiB,CAAS;IAClC,CAAC;IACE,uCAAkB,GAAzB;QACI,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,uBAAU,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAClF,IAAM,WAAW,GAAG,UAAU,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAA;QACtF,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAA;IAC/C,CAAC;IACM,qCAAgB,GAAvB,UAAwB,GAAW,EAAE,GAAW,EAAE,SAAkB;QAChE,OAAO,IAAI,EAAE,CAAC,IAAI,CACd,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,uBAAU,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,GAAG,EACtF,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,uBAAU,CAAC,OAAO,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,GAAG,EACtF,CAAC,CACJ,CAAC;IACN,CAAC;IACM,iCAAY,GAAnB,UAAoB,SAAkB;QAClC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IACM,iCAAY,GAAnB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IACL,iBAAC;AAAD,CA1BA,AA0BC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import { GridConfig } from \"./GridConfig\";\n\nexport default class BoardSizer {\n    private blockSize: cc.Vec2\n\n    constructor(\n        private container: cc.Node,\n        private columns: number,\n        private originalBlockSize: cc.Vec2,\n    ) { }\n    public calculateBlockSize(): cc.Vec2 {\n        const blockWidth = (this.container.width - GridConfig.marginX * 2) / this.columns;\n        const blockHeight = blockWidth * (this.originalBlockSize.y / this.originalBlockSize.x)\n        return new cc.Vec2(blockWidth, blockHeight)\n    }\n    public getBlockPosition(row: number, col: number, blockSize: cc.Vec2): cc.Vec3 {\n        return new cc.Vec3(\n            -(this.container.width / 2 - GridConfig.marginX - blockSize.x / 2) + blockSize.x * col,\n            (this.container.height / 2 - GridConfig.marginX - blockSize.y / 2) - blockSize.y * row,\n            0\n        );\n    }\n    public setBlockSize(blockSize: cc.Vec2): void {\n        this.blockSize = blockSize;\n    }\n    public getBlockSize(): cc.Vec2 {\n        return this.blockSize;\n    }\n}\n"]}