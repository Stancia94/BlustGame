{"version":3,"sources":["assets\\scripts\\ScoreManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { EventBus } from \"./EventBus\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class ScoreManager extends cc.Component {\r\n    // onLoad () {}\r\n    private stepAmount: number = 0;\r\n    private scoreAmount: number = 0;\r\n    public currentScore: number = 0;\r\n    @property(cc.Node)\r\n    movesNode: cc.Node = null;\r\n    @property(cc.Node)\r\n    scoreNode: cc.Node = null;\r\n    @property\r\n    minSteps: number = 10;\r\n    @property\r\n    maxSteps: number = 40;\r\n    @property\r\n    minTargetScore: number = 100;\r\n    @property\r\n    maxTargetScore: number = 1000;\r\n    protected onLoad(): void {\r\n        EventBus.on('blocks-destroy', this.onBlockDestroy, this);\r\n        EventBus.on('step', this.onStep, this);\r\n    }\r\n    start() {\r\n        this.stepAmount = this.randomNumber(this.minSteps, this.maxSteps);\r\n        this.scoreAmount = this.randomNumber(this.minTargetScore, this.maxTargetScore);\r\n        this.updateView();\r\n    }\r\n    private randomNumber(min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    private onBlockDestroy(destroyLength: number): void {\r\n        this.currentScore += destroyLength * 10;\r\n        this.isWin();\r\n        this.updateView();\r\n    }\r\n    private onStep(): void {\r\n        this.stepAmount -= 1;\r\n        this.isWin();\r\n        this.updateView();\r\n    }\r\n    private isWin(): void {\r\n        if (this.currentScore > this.scoreAmount) {\r\n            EventBus.emit('gameEnd', true);\r\n        } else if (this.stepAmount === 0) {\r\n            EventBus.emit('gameEnd', false);\r\n        }\r\n    }\r\n    private updateView(): void {\r\n        this.movesNode.getComponent(cc.Label).string = String(this.stepAmount);\r\n        this.scoreNode.getComponent(cc.Label).string = `${this.currentScore}/${this.scoreAmount}`;\r\n    }\r\n    protected onDestroy(): void {\r\n        EventBus.off('blocks-destroy', this.onBlockDestroy, this);\r\n        EventBus.off('step', this.onStep, this);\r\n    }\r\n    // update (dt) {}\r\n}\r\n"]}