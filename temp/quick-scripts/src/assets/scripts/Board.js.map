{"version":3,"sources":["assets\\scripts\\Board.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BoardType, BlockClickEvent, isBlockKey, isExtraBlockKey } from \"./Types\";\r\nimport { getRandomBlockKey, getRandomExtraBlockKey } from \"./Utils\";\r\nimport { EventBus } from \"./EventBus\";\r\nimport { GridConfig } from \"./GridConfig\";\r\nimport MatchFinder from \"./MatchFinder\";\r\nimport BlockFactory from \"./BlockFactory\";\r\nimport ExtraBlockHandler from \"./ExtraBlockHandler\";\r\n\r\nconst { Vec3 } = cc;\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Board extends cc.Component {\r\n    @property(cc.Prefab)\r\n    blockPrefab: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    extraBlockPrefab: cc.Prefab = null;\r\n    private width: number = 9;\r\n    private height: number = 9;\r\n    private board: BoardType[][];\r\n    private matchFinder: MatchFinder;\r\n    private blockFactory: BlockFactory;\r\n    private extraBlockHandler: ExtraBlockHandler;\r\n\r\n    protected onLoad(): void {\r\n        EventBus.on('block-clicked', this.onBlockClicked, this);\r\n    }\r\n\r\n    protected start(): void {\r\n        this.board = new Array(this.height).fill(0).map(() => new Array(this.width).fill(null));\r\n        this.matchFinder = new MatchFinder(this.board);\r\n        this.blockFactory = new BlockFactory(this.blockPrefab, this.extraBlockPrefab, this.node);\r\n        this.extraBlockHandler = new ExtraBlockHandler(this.board);\r\n        this.fill();\r\n    }\r\n    private fill(): void {\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                if (this.board[y][x] === null) {\r\n                    const block = this.blockFactory.createBlock(y, x, getRandomBlockKey());\r\n                    this.setBlock(y, x, block);\r\n                    const startPos = new Vec3(\r\n                        GridConfig.startXPosition + GridConfig.width * x,\r\n                        GridConfig.behindScreen\r\n                    )\r\n                    const targetPos = new Vec3(\r\n                        GridConfig.startXPosition + GridConfig.width * x,\r\n                        GridConfig.startYPosition - GridConfig.height * y,\r\n                        0);\r\n                    block.fallAnimation(startPos, targetPos);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private fall(): void {\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = this.height - 2; y >= 0; y--) {\r\n                const block = this.board[y][x];\r\n                if (!block) continue;\r\n                let newY = y;\r\n                while (newY + 1 < this.height && this.board[newY + 1][x] === null) {\r\n                    newY++;\r\n                }\r\n                if (newY !== y) {\r\n                    this.board[y][x] = null;\r\n                    this.setBlock(newY, x, block);\r\n                    const targetPos = new Vec3(\r\n                        GridConfig.startXPosition + GridConfig.width * x,\r\n                        GridConfig.startYPosition - GridConfig.height * newY,\r\n                        0\r\n                    );\r\n                    block.fallTo(targetPos, 0.4)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private destroyGroup(blocks: BoardType[]): void {\r\n        EventBus.emit('blocks-destroy', blocks.length);\r\n        blocks.forEach((block) => {\r\n            block.destroyYourself();\r\n            this.board[block.getRow()][block.getCol()] = null;\r\n        });\r\n        this.fall();\r\n        this.fill();\r\n    }\r\n    private onBlockClicked(data: BlockClickEvent): void {\r\n        if (isBlockKey(data.blockType)) {\r\n            let sameBlocks: BoardType[] = [];\r\n            sameBlocks = this.matchFinder.find(data.row, data.col, data.blockType);\r\n            if (sameBlocks.length >= 2) {\r\n                EventBus.emit('step');\r\n                if (sameBlocks.length >= 5) {\r\n                    this.upgradeToExtraBlock(data.row, data.col, sameBlocks);\r\n                }\r\n                this.destroyGroup(sameBlocks);\r\n            }\r\n        } else if (isExtraBlockKey(data.blockType)) {\r\n            const blockForDestroy = this.extraBlockHandler.handle(data);\r\n            this.destroyGroup(blockForDestroy);\r\n        }\r\n    }\r\n    private upgradeToExtraBlock(row: number, col: number, blocksForDestroy: BoardType[]) {\r\n        this.deleteBlock(row, col);\r\n        const extraBlock = this.blockFactory.createExtraBlock(row, col, getRandomExtraBlockKey());\r\n        this.setBlock(row, col, extraBlock);\r\n        extraBlock.node.setPosition(new Vec3(\r\n            GridConfig.startXPosition + GridConfig.width * col,\r\n            GridConfig.startYPosition - GridConfig.height * row,\r\n            0))\r\n        const index = blocksForDestroy.findIndex(\r\n            (block) => block.getRow() === row && block.getCol() === col\r\n        );\r\n        if (index >= 0) blocksForDestroy.splice(index, 1);\r\n    }\r\n    private deleteBlock(row: number, col: number): void {\r\n        const block = this.board[row][col];\r\n        block.destroyYourself();\r\n        this.board[row][col] = null;\r\n    }\r\n    private setBlock(row: number, col: number, block: BoardType): void {\r\n        block.setRowCol(row, col);\r\n        this.board[row][col] = block;\r\n    }\r\n    protected onDestroy(): void {\r\n        EventBus.off('block-clicked', this.onBlockClicked, this);\r\n    }\r\n}\r\n"]}