{"version":3,"sources":["assets\\scripts\\Block.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { blockColor, BlockKey } from \"./Types\";\r\nimport { EventBus } from \"./EventBus\";\r\nimport { GridConfig } from \"./GridConfig\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class Block<T extends string = BlockKey> extends cc.Component {\r\n    @property(cc.SpriteAtlas)\r\n    atlas: cc.SpriteAtlas = null;\r\n    @property(cc.Node)\r\n    blockSpriteNode: cc.Node = null;\r\n    @property(cc.Node)\r\n    smokeNode: cc.Node = null;\r\n    protected row: number = 0;\r\n    protected col: number = 0;\r\n    protected blockType: T = 'blue' as T;\r\n    protected width: number = GridConfig.width;\r\n    protected height: number = GridConfig.height;\r\n    protected onLoad(): void {\r\n        this.blockSpriteNode.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n    }\r\n    start() { }\r\n    public getRow(): number {\r\n        return this.row;\r\n    }\r\n    public getCol(): number {\r\n        return this.col;\r\n    }\r\n    public getType(): T {\r\n        return this.blockType;\r\n    }\r\n    public setRowCol(row: number, col: number) {\r\n        this.row = row;\r\n        this.col = col;\r\n    }\r\n    public init(row: number, col: number, blockType: T, size?: cc.Vec2): void {\r\n        this.row = row;\r\n        this.col = col;\r\n        this.blockType = blockType;\r\n        this.setSize(size);\r\n        this.updateVisual();\r\n    }\r\n    public setSize(size: cc.Vec2) {\r\n        const scaleX = size.x / GridConfig.width;\r\n        const scaleY = size.y / GridConfig.height;\r\n        this.node.setScale(scaleX, scaleY);\r\n    }\r\n    protected updateVisual(): void {\r\n        const key = this.blockType as BlockKey\r\n        const spriteFrame = this.atlas.getSpriteFrame(blockColor[key]);\r\n        const sprite = this.blockSpriteNode.getComponent(cc.Sprite);\r\n        sprite.spriteFrame = spriteFrame;\r\n    }\r\n    protected updateScale(): void {\r\n\r\n    }\r\n    public destroyYourself(): void {\r\n        const anim = this.blockSpriteNode.getComponent(cc.Animation);\r\n        const particle = this.smokeNode.getComponent(cc.ParticleSystem);\r\n        anim.once('finished', () => {\r\n            this.node.destroy();\r\n        }, this)\r\n        anim.play();\r\n        particle.resetSystem();\r\n    }\r\n    public fallTo(targetPos: cc.Vec3, time: number): void {\r\n        cc.tween(this.node)\r\n            .to(time, { position: targetPos }, { easing: \"sineOut\" })\r\n            .start();\r\n    }\r\n    public fallAnimation(startPos: cc.Vec3, targetPos: cc.Vec3) {\r\n        this.node.setPosition(startPos);\r\n        this.fallTo(targetPos, 0.5);\r\n    }\r\n    private onTouch(): void {\r\n        EventBus.emit('block-clicked', { blockType: this.blockType, row: this.row, col: this.col });\r\n    }\r\n    protected onDestroy(): void {\r\n        this.blockSpriteNode.off(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n    }\r\n}\r\n"]}